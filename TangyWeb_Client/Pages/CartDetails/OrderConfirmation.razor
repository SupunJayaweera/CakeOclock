@page "/OrderConfirmation"

@inject ILocalStorageService _localStorage
@inject IOrderService _orderService
@inject NavigationManager _navigationManager
@inject IJSRuntime _jSRuntime



<div class="container">
    @if (IsProcessing)
    {
        <div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px;">
            <img src="images/ajax-loader.gif" />
        </div>
    }
    else
    {
        @if (Order.OrderHeader.Status == SD.Status_Confirmed)
        {
            <div class="row mt-4 pt-4">
                <div class="col-10 offset-1 text-center">
                    <h2 class="text-warning">Order Confirmed</h2>
                    <div class="row">
                        <div class="col-6 col-md-3 offset-md-3 text-end">
                            <p>Your order has been placed successfully with order id : @Order.OrderHeader.Id</p>
                        </div>
                        <div class="col-6 col-md-3 text-end">
                            <a @onclick="ContinueShopping" class="btn btn-outline-info form-control">Continue Shopping</a>
                        </div>

                    </div>
                </div>
                <div class="col-8 offset-2">
                    <img src="/images/confirmation.jpg" width="100%" style="border-radius:30px;" />
                </div>

            </div>
        }
        else
        {
            <div class="row mt-4 pt-4">
                <div class="col-10 offset-1 text-center">
                    <h2 class="text-danger">Order Issue!</h2>
                    <div class="row">
                        <div class="col-6 col-md-3 offset-md-3 text-end">
                            <p>Your order had payment issue please cotact us with Order ID:  @Order.OrderHeader.Id</p>
                        </div>
                        <div class="col-6 col-md-3 text-end">
                            <a href="/" class="btn btn-outline-info form-control">Continue Shopping</a>
                        </div>
                    </div>
                </div>
                <div class="col-8 offset-2">
                    <img src="/images/confirmation.jpg" width="100%" style="border-radius:30px;" />
                </div>
            </div>
        }

    }
</div>


@code {
    private bool IsProcessing { get; set; } = false;
    private OrderDTO Order { get; set; }

    protected override async Task OnInitializedAsync()
    {
        IsProcessing = true;
        Order = await _localStorage.GetItemAsync<OrderDTO>(SD.Local_OrderDetails);
        //add logic to check payment and update status

        var updatedOrder = await _orderService.MarkPaymentSuccessful(Order.OrderHeader);
        if (updatedOrder.Status == SD.Status_Confirmed)
        {
            Order.OrderHeader.Status = updatedOrder.Status;
            await _localStorage.RemoveItemAsync(SD.ShoppingCart);
            await _localStorage.RemoveItemAsync(SD.Local_OrderDetails);
            
        }

        // var updatedOrder = await _orderService.MarkPaymentSuccessful(Order?.OrderHeader);

        // if (updatedOrder != null && updatedOrder.Status == SD.Status_Confirmed)
        // {
        //     if (Order?.OrderHeader != null)
        //     {
        //         Order.OrderHeader.Status = updatedOrder.Status;
        //     }

        //     if (_localStorage != null)
        //     {
        //         await _localStorage.RemoveItemAsync(SD.ShoppingCart);
        //         await _localStorage.RemoveItemAsync(SD.Local_OrderDetails);
        //     }
        // }



        IsProcessing = false;
    }
    private void ContinueShopping()
    {
        // Navigate to the "/" page
        _navigationManager.NavigateTo("/", forceLoad: true);

        // Refresh the page using JavaScript interop
        //_jSRuntime.InvokeVoidAsync("location.reload");
    }
}
